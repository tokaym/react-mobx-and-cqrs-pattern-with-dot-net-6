// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20221129061505_MainReportPlantIdNullable")]
    partial class MainReportPlantIdNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Security.Entities.OperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Security.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmployeeNo");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mail");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Core.Security.Entities.UserOperationClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperationClaimId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Estimate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Estimates", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MainReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CD")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CD");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Company");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FirstOrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("FirstOrderDate");

                    b.Property<int?>("HF")
                        .HasColumnType("int")
                        .HasColumnName("HF");

                    b.Property<int?>("HfCloses")
                        .HasColumnType("int")
                        .HasColumnName("HfCloses");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<string>("Mip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mip");

                    b.Property<string>("MipLiable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MipLiable");

                    b.Property<int?>("OpenAmount")
                        .HasColumnType("int")
                        .HasColumnName("OpenAmount");

                    b.Property<Guid?>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductClass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProductClass");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("Date")
                        .HasColumnName("ReportDate");

                    b.Property<int?>("SasCloses")
                        .HasColumnType("int")
                        .HasColumnName("SasCloses");

                    b.Property<int?>("Sent")
                        .HasColumnType("int")
                        .HasColumnName("Sent");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("TT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TT");

                    b.Property<int?>("ThStock")
                        .HasColumnType("int")
                        .HasColumnName("ThStock");

                    b.Property<int?>("Urgent")
                        .HasColumnType("int")
                        .HasColumnName("Urgent");

                    b.Property<int?>("UrgentCloses")
                        .HasColumnType("int")
                        .HasColumnName("UrgentCloses");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("UserId");

                    b.ToTable("MainReports", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MaterialGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GroupName");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.HasKey("Id");

                    b.ToTable("MaterialGroups", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mb51", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Customer");

                    b.Property<int?>("Dpyr")
                        .HasColumnType("int")
                        .HasColumnName("Dpyr");

                    b.Property<string>("HrkTUMtn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HrkTUMtn");

                    b.Property<string>("ITU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ITU");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<string>("MaterialInfo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialInfo");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reference");

                    b.Property<DateTime?>("RegisterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegisterDate");

                    b.Property<string>("SatSasNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SatSasNo");

                    b.HasKey("Id");

                    b.ToTable("Mb51s", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mb51History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Customer");

                    b.Property<int>("Dpyr")
                        .HasColumnType("int")
                        .HasColumnName("Dpyr");

                    b.Property<string>("HrkTUMtn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HrkTUMtn");

                    b.Property<string>("ITU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ITU");

                    b.Property<int>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<string>("MaterialInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialInfo");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialSKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Reference");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("RegisterDate");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("Date")
                        .HasColumnName("ReportDate");

                    b.Property<string>("SatSasNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SatSasNo");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Mb51Histories", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Mip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CD")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CD");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.HasKey("Id");

                    b.ToTable("Mips", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Plant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Plants", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RomaniaZm20", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ad1");

                    b.Property<string>("Ad11")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ad11");

                    b.Property<string>("AlanUYEm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYEm");

                    b.Property<string>("AlanUYY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYY");

                    b.Property<string>("Alternative")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Alternative");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<string>("Cd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cd");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ConfirmationDate");

                    b.Property<string>("DPYR")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DPYR");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Definition");

                    b.Property<int?>("Delivered")
                        .HasColumnType("int")
                        .HasColumnName("Delivered");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<int?>("Item2")
                        .HasColumnType("int")
                        .HasColumnName("Item2");

                    b.Property<int?>("Item3")
                        .HasColumnType("int")
                        .HasColumnName("Item3");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialNo");

                    b.Property<string>("MaterialSat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSat");

                    b.Property<string>("Mip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mip");

                    b.Property<int?>("OpenQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OpenQuantity");

                    b.Property<string>("Orderer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Orderer");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Quality");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<string>("SaRequest")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SaRequest");

                    b.Property<string>("Sag")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sag");

                    b.Property<string>("SalesInf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SalesInf");

                    b.Property<string>("SasItem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SasItem");

                    b.Property<string>("Seller")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Seller");

                    b.Property<string>("SrvRef")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SrvRef");

                    b.Property<string>("StBu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StBu");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Star");

                    b.Property<string>("Suply")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Suply");

                    b.Property<string>("TahKlm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TahKlm");

                    b.Property<int?>("TermQuantity")
                        .HasColumnType("int");

                    b.Property<string>("TesMip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TesMip");

                    b.Property<string>("TrmSt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TrmSt");

                    b.Property<string>("UY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY");

                    b.Property<string>("UY2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Unit");

                    b.HasKey("Id");

                    b.ToTable("RomaniaZm20s", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RomaniaZm20History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ad1");

                    b.Property<string>("Ad11")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ad11");

                    b.Property<string>("AlanUYEm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYEm");

                    b.Property<string>("AlanUYY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYY");

                    b.Property<string>("Alternative")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Alternative");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<string>("Cd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cd");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ConfirmationDate");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("DPYR")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DPYR");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Definition");

                    b.Property<int?>("Delivered")
                        .HasColumnType("int")
                        .HasColumnName("Delivered");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<int?>("Item2")
                        .HasColumnType("int")
                        .HasColumnName("Item2");

                    b.Property<int?>("Item3")
                        .HasColumnType("int")
                        .HasColumnName("Item3");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialNo");

                    b.Property<string>("MaterialSat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSat");

                    b.Property<string>("Mip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mip");

                    b.Property<int?>("OpenQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OpenQuantity");

                    b.Property<string>("Orderer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Orderer");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Quality");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("Date")
                        .HasColumnName("ReportDate");

                    b.Property<string>("SaRequest")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SaRequest");

                    b.Property<string>("Sag")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sag");

                    b.Property<string>("SalesInf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SalesInf");

                    b.Property<string>("SasItem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SasItem");

                    b.Property<string>("Seller")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Seller");

                    b.Property<string>("SrvRef")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SrvRef");

                    b.Property<string>("StBu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StBu");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Star");

                    b.Property<string>("Suply")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Suply");

                    b.Property<string>("TahKlm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TahKlm");

                    b.Property<int?>("TermQuantity")
                        .HasColumnType("int");

                    b.Property<string>("TesMip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TesMip");

                    b.Property<string>("TrmSt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TrmSt");

                    b.Property<string>("UY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY");

                    b.Property<string>("UY2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Unit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RomaniaZm20Histories", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("Settings", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Zm20", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AlanUYEmnStok")
                        .HasColumnType("int")
                        .HasColumnName("AlanUYEmnStok");

                    b.Property<string>("AlanUYYuvDeg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYYuvDeg");

                    b.Property<int?>("AmountDelivered")
                        .HasColumnType("int")
                        .HasColumnName("AmountDelivered");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ConfirmationDate");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContractNo");

                    b.Property<string>("DY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DY");

                    b.Property<string>("Empty1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty1");

                    b.Property<string>("Empty2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty2");

                    b.Property<string>("Empty3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty3");

                    b.Property<string>("Empty4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty4");

                    b.Property<string>("Empty5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty5");

                    b.Property<string>("Empty6")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty6");

                    b.Property<string>("Empty7")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty7");

                    b.Property<string>("Empty8")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty8");

                    b.Property<string>("Empty9")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty9");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<string>("Item2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Item2");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<string>("MaterialSat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSat");

                    b.Property<int?>("Mip")
                        .HasColumnType("int")
                        .HasColumnName("Mip");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int?>("OpenAmount")
                        .HasColumnType("int")
                        .HasColumnName("OpenAmount");

                    b.Property<int?>("QualityStock")
                        .HasColumnType("int")
                        .HasColumnName("QualityStock");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<int?>("RemainingStock")
                        .HasColumnType("int")
                        .HasColumnName("RemainingStock");

                    b.Property<string>("SatSasNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SatSasNo");

                    b.Property<string>("Seller")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Seller");

                    b.Property<string>("SellerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SellerName");

                    b.Property<int?>("SrvRef")
                        .HasColumnType("int")
                        .HasColumnName("SrvRef");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Star");

                    b.Property<string>("TT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TT");

                    b.Property<string>("TesMip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TesMip");

                    b.Property<string>("UY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY");

                    b.Property<string>("UYCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UYCode");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Unit");

                    b.HasKey("Id");

                    b.ToTable("Zm20s", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Zm20History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AlanUYEmnStok")
                        .HasColumnType("int")
                        .HasColumnName("AlanUYEmnStok");

                    b.Property<string>("AlanUYYuvDeg")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AlanUYYuvDeg");

                    b.Property<int?>("AmountDelivered")
                        .HasColumnType("int")
                        .HasColumnName("AmountDelivered");

                    b.Property<DateTime?>("ArrivalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<DateTime?>("ConfirmationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ConfirmationDate");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ContractNo");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<string>("DY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DY");

                    b.Property<string>("Empty1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty1");

                    b.Property<string>("Empty2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty2");

                    b.Property<string>("Empty3")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty3");

                    b.Property<string>("Empty4")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty4");

                    b.Property<string>("Empty5")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty5");

                    b.Property<string>("Empty6")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty6");

                    b.Property<string>("Empty7")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty7");

                    b.Property<string>("Empty8")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty8");

                    b.Property<string>("Empty9")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty9");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("Item");

                    b.Property<string>("Item2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Item2");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialName");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<string>("MaterialSat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSat");

                    b.Property<int?>("Mip")
                        .HasColumnType("int")
                        .HasColumnName("Mip");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int?>("OpenAmount")
                        .HasColumnType("int")
                        .HasColumnName("OpenAmount");

                    b.Property<int?>("QualityStock")
                        .HasColumnType("int")
                        .HasColumnName("QualityStock");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleaseDate");

                    b.Property<int?>("RemainingStock")
                        .HasColumnType("int")
                        .HasColumnName("RemainingStock");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("Date")
                        .HasColumnName("ReportDate");

                    b.Property<string>("SatSasNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SatSasNo");

                    b.Property<string>("Seller")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Seller");

                    b.Property<string>("SellerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SellerName");

                    b.Property<int?>("SrvRef")
                        .HasColumnType("int")
                        .HasColumnName("SrvRef");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Star");

                    b.Property<string>("TT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TT");

                    b.Property<string>("TesMip")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TesMip");

                    b.Property<string>("UY")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UY");

                    b.Property<string>("UYCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UYCode");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Unit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Zm20Histories", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Zs14", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int?>("CgrSas")
                        .HasColumnType("int")
                        .HasColumnName("CgrSas");

                    b.Property<int?>("CgrSat")
                        .HasColumnType("int")
                        .HasColumnName("CgrSat");

                    b.Property<int?>("ConsumptionValue")
                        .HasColumnType("int")
                        .HasColumnName("ConsumptionValue");

                    b.Property<DateTime?>("DeadlineDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeadlineDate");

                    b.Property<string>("Definition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Definition");

                    b.Property<string>("Dr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Dr");

                    b.Property<string>("Dr2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Dr2");

                    b.Property<string>("Empty1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Empty1");

                    b.Property<int?>("HfOrder")
                        .HasColumnType("int")
                        .HasColumnName("HfOrder");

                    b.Property<DateTime?>("InstantDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("InstantDate");

                    b.Property<int?>("IsSafety")
                        .HasColumnType("int")
                        .HasColumnName("IsSafety");

                    b.Property<int?>("MIhrTes")
                        .HasColumnType("int")
                        .HasColumnName("MIhrTes");

                    b.Property<int?>("MP")
                        .HasColumnType("int")
                        .HasColumnName("MP");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialSKU")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MaterialSKU");

                    b.Property<int?>("Mip")
                        .HasColumnType("int")
                        .HasColumnName("Mip");

                    b.Property<string>("MipArea")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MipArea");

                    b.Property<string>("SG")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SG");

                    b.Property<int?>("Sas")
                        .HasColumnType("int")
                        .HasColumnName("Sas");

                    b.Property<DateTime?>("SasConfirm")
                        .HasColumnType("datetime2")
                        .HasColumnName("SasConfirm");

                    b.Property<DateTime?>("SasDelivery")
                        .HasColumnType("datetime2")
                        .HasColumnName("SasDelivery");

                    b.Property<int?>("Sat")
                        .HasColumnType("int")
                        .HasColumnName("Sat");

                    b.Property<string>("Star")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Star");

                    b.Property<int?>("Stnkrz")
                        .HasColumnType("int")
                        .HasColumnName("Stnkrz");

                    b.Property<string>("TYeri")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TYeri");

                    b.Property<int?>("Teslpln")
                        .HasColumnType("int")
                        .HasColumnName("Teslpln");

                    b.Property<int?>("TransportStock")
                        .HasColumnType("int")
                        .HasColumnName("TransportStock");

                    b.Property<int?>("UYAmbar")
                        .HasColumnType("int")
                        .HasColumnName("UYAmbar");

                    b.Property<int?>("UYDiger")
                        .HasColumnType("int")
                        .HasColumnName("UYDiger");

                    b.Property<DateTime?>("YDIlkSip")
                        .HasColumnType("datetime2")
                        .HasColumnName("YDIlkSip");

                    b.Property<int?>("YDKDOrder")
                        .HasColumnType("int")
                        .HasColumnName("YDKDOrder");

                    b.Property<int?>("YDKIOrder")
                        .HasColumnType("int")
                        .HasColumnName("YDKIOrder");

                    b.Property<DateTime?>("YIIlkSip")
                        .HasColumnType("datetime2")
                        .HasColumnName("YIIlkSip");

                    b.Property<string>("YP")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("YP");

                    b.Property<int?>("YsOrder")
                        .HasColumnType("int")
                        .HasColumnName("YsOrder");

                    b.HasKey("Id");

                    b.ToTable("Zs14s", (string)null);
                });

            modelBuilder.Entity("Core.Security.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Core.Security.Entities.OperationClaim", "OperationClaim")
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Security.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.MainReport", b =>
                {
                    b.HasOne("Domain.Entities.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantId");

                    b.HasOne("Core.Security.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Mb51History", b =>
                {
                    b.HasOne("Core.Security.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RomaniaZm20History", b =>
                {
                    b.HasOne("Core.Security.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Zm20History", b =>
                {
                    b.HasOne("Core.Security.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
